buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "${mod_version}"
group = "com.chaosbuffalo.mkultrax" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mkultra-compat"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${forgemc_version}-${forge_version}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${mappings_version}"
    replace "@VERSION@", project.version
    replaceIn "MKultraX.java"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven { url "http://blamejared.com/maven" }
    maven { url 'http://dvs1.progwml6.com/files/maven' }
    maven { url "http://www.ryanliptak.com/maven/" }
    maven { url "http://maven.amadornes.com/" }
    maven {
        name = 'CurseForge'
        url = 'https://minecraft.curseforge.com/api/maven/'
    }
    maven { // Tesla
        name 'MMD'
        url 'https://maven.mcmoddev.com/'
    }
    maven { // AstralSorcery
        name 'AstralSorcery'
        url 'https://maven.hellfiredev.net/'
    }
}

dependencies {
    deobfCompile 'ice-and-fire-dragons:iceandfire:1.6.1:1.12.2'
    deobfCompile "betterwithmods:BetterWithMods:1.12-2.3.20-1030"
    deobfCompile "spartan-weaponry:SpartanWeaponry-1.12.2:beta:1.2.3"
    deobfProvided "hellfirepvp.astralsorcery:astralsorcery:1.12.2-1.10.15-v120"
    runtime "hellfirepvp.astralsorcery:astralsorcery:1.12.2-1.10.15-v120"
    deobfProvided "com.mcmoddev:OreSpawn:${mc_version}-${orespawn_version}"
    runtime "com.mcmoddev:OreSpawn:${mc_version}-${orespawn_version}"
    deobfProvided "com.mcmoddev:BaseMetals:${mc_version}-${bme_version}"
    runtime "com.mcmoddev:BaseMetals:${mc_version}-${bme_version}"
    deobfProvided("com.mcmoddev:MMDLib:${mc_version}-${mmdlib_version}") {
        exclude group: 'mezz.jei'
    }
    deobfCompile group: 'targetingapi', name: 'targeting_api', version: '0.13'
    deobfCompile group: 'mk-ultra', name: 'MKUltra', version: '0.81'
    compile fileTree(dir: 'libs', include: '*.jar')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
